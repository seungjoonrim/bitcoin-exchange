"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RPCErrorCode = exports.UnknownError = exports.AuthError = exports.BitcoinRpcError = exports.ConnectionError = void 0;
class ConnectionError extends Error {
    constructor(message) {
        super(message);
        this.name = 'ConnectionError';
    }
}
exports.ConnectionError = ConnectionError;
class BitcoinRpcError extends Error {
    constructor(code, message) {
        super(message);
        this.code = code;
        this.name = 'BitcoinRpcError';
    }
}
exports.BitcoinRpcError = BitcoinRpcError;
class AuthError extends Error {
    constructor() {
        super('Invalid credentials');
        this.name = 'AuthError';
    }
}
exports.AuthError = AuthError;
class UnknownError extends Error {
    constructor(axiosError) {
        super(axiosError.message);
        if (Error.captureStackTrace) {
            Error.captureStackTrace(this, UnknownError);
        }
        this.name = 'UnknownError';
    }
}
exports.UnknownError = UnknownError;
// Taken from: https://github.com/bitcoin/bitcoin/blob/master/src/rpc/protocol.h#L32L87
var RPCErrorCode;
(function (RPCErrorCode) {
    //! Standard JSON-RPC 2.0 errors
    // RPC_INVALID_REQUEST is internally mapped to HTTP_BAD_REQUEST (400).
    // It should not be used for application-layer errors.
    RPCErrorCode[RPCErrorCode["RPC_INVALID_REQUEST"] = -32600] = "RPC_INVALID_REQUEST";
    // RPC_METHOD_NOT_FOUND is internally mapped to HTTP_NOT_FOUND (404).
    // It should not be used for application-layer errors.
    RPCErrorCode[RPCErrorCode["RPC_METHOD_NOT_FOUND"] = -32601] = "RPC_METHOD_NOT_FOUND";
    RPCErrorCode[RPCErrorCode["RPC_INVALID_PARAMS"] = -32602] = "RPC_INVALID_PARAMS";
    // RPC_INTERNAL_ERROR should only be used for genuine errors in bitcoind
    // (for example datadir corruption).
    RPCErrorCode[RPCErrorCode["RPC_INTERNAL_ERROR"] = -32603] = "RPC_INTERNAL_ERROR";
    RPCErrorCode[RPCErrorCode["RPC_PARSE_ERROR"] = -32700] = "RPC_PARSE_ERROR";
    //! General application defined errors
    RPCErrorCode[RPCErrorCode["RPC_MISC_ERROR"] = -1] = "RPC_MISC_ERROR";
    RPCErrorCode[RPCErrorCode["RPC_TYPE_ERROR"] = -3] = "RPC_TYPE_ERROR";
    RPCErrorCode[RPCErrorCode["RPC_INVALID_ADDRESS_OR_KEY"] = -5] = "RPC_INVALID_ADDRESS_OR_KEY";
    RPCErrorCode[RPCErrorCode["RPC_OUT_OF_MEMORY"] = -7] = "RPC_OUT_OF_MEMORY";
    RPCErrorCode[RPCErrorCode["RPC_INVALID_PARAMETER"] = -8] = "RPC_INVALID_PARAMETER";
    RPCErrorCode[RPCErrorCode["RPC_DATABASE_ERROR"] = -20] = "RPC_DATABASE_ERROR";
    RPCErrorCode[RPCErrorCode["RPC_DESERIALIZATION_ERROR"] = -22] = "RPC_DESERIALIZATION_ERROR";
    RPCErrorCode[RPCErrorCode["RPC_VERIFY_ERROR"] = -25] = "RPC_VERIFY_ERROR";
    RPCErrorCode[RPCErrorCode["RPC_VERIFY_REJECTED"] = -26] = "RPC_VERIFY_REJECTED";
    RPCErrorCode[RPCErrorCode["RPC_VERIFY_ALREADY_IN_CHAIN"] = -27] = "RPC_VERIFY_ALREADY_IN_CHAIN";
    RPCErrorCode[RPCErrorCode["RPC_IN_WARMUP"] = -28] = "RPC_IN_WARMUP";
    RPCErrorCode[RPCErrorCode["RPC_METHOD_DEPRECATED"] = -32] = "RPC_METHOD_DEPRECATED";
    //! P2P client errors
    RPCErrorCode[RPCErrorCode["RPC_CLIENT_NOT_CONNECTED"] = -9] = "RPC_CLIENT_NOT_CONNECTED";
    RPCErrorCode[RPCErrorCode["RPC_CLIENT_IN_INITIAL_DOWNLOAD"] = -10] = "RPC_CLIENT_IN_INITIAL_DOWNLOAD";
    RPCErrorCode[RPCErrorCode["RPC_CLIENT_NODE_ALREADY_ADDED"] = -23] = "RPC_CLIENT_NODE_ALREADY_ADDED";
    RPCErrorCode[RPCErrorCode["RPC_CLIENT_NODE_NOT_ADDED"] = -24] = "RPC_CLIENT_NODE_NOT_ADDED";
    RPCErrorCode[RPCErrorCode["RPC_CLIENT_NODE_NOT_CONNECTED"] = -29] = "RPC_CLIENT_NODE_NOT_CONNECTED";
    RPCErrorCode[RPCErrorCode["RPC_CLIENT_INVALID_IP_OR_SUBNET"] = -30] = "RPC_CLIENT_INVALID_IP_OR_SUBNET";
    RPCErrorCode[RPCErrorCode["RPC_CLIENT_P2P_DISABLED"] = -31] = "RPC_CLIENT_P2P_DISABLED";
    //! Chain errors
    RPCErrorCode[RPCErrorCode["RPC_CLIENT_MEMPOOL_DISABLED"] = -33] = "RPC_CLIENT_MEMPOOL_DISABLED";
    //! Wallet errors
    RPCErrorCode[RPCErrorCode["RPC_WALLET_ERROR"] = -4] = "RPC_WALLET_ERROR";
    RPCErrorCode[RPCErrorCode["RPC_WALLET_INSUFFICIENT_FUNDS"] = -6] = "RPC_WALLET_INSUFFICIENT_FUNDS";
    RPCErrorCode[RPCErrorCode["RPC_WALLET_INVALID_LABEL_NAME"] = -11] = "RPC_WALLET_INVALID_LABEL_NAME";
    RPCErrorCode[RPCErrorCode["RPC_WALLET_KEYPOOL_RAN_OUT"] = -12] = "RPC_WALLET_KEYPOOL_RAN_OUT";
    RPCErrorCode[RPCErrorCode["RPC_WALLET_UNLOCK_NEEDED"] = -13] = "RPC_WALLET_UNLOCK_NEEDED";
    RPCErrorCode[RPCErrorCode["RPC_WALLET_PASSPHRASE_INCORRECT"] = -14] = "RPC_WALLET_PASSPHRASE_INCORRECT";
    RPCErrorCode[RPCErrorCode["RPC_WALLET_WRONG_ENC_STATE"] = -15] = "RPC_WALLET_WRONG_ENC_STATE";
    RPCErrorCode[RPCErrorCode["RPC_WALLET_ENCRYPTION_FAILED"] = -16] = "RPC_WALLET_ENCRYPTION_FAILED";
    RPCErrorCode[RPCErrorCode["RPC_WALLET_ALREADY_UNLOCKED"] = -17] = "RPC_WALLET_ALREADY_UNLOCKED";
    RPCErrorCode[RPCErrorCode["RPC_WALLET_NOT_FOUND"] = -18] = "RPC_WALLET_NOT_FOUND";
    RPCErrorCode[RPCErrorCode["RPC_WALLET_NOT_SPECIFIED"] = -19] = "RPC_WALLET_NOT_SPECIFIED";
})(RPCErrorCode = exports.RPCErrorCode || (exports.RPCErrorCode = {}));
